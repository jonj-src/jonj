// $Id$
// vim: ft=javascript

ARG_WITH("iconv", "iconv support", "yes");

if (JONJ_ICONV != "no") {
	if ((CHECK_LIB("libiconv_a.lib", "iconv", JONJ_ICONV) || CHECK_LIB("libiconv.lib", "iconv", JONJ_ICONV) ||
			CHECK_LIB("iconv_a.lib", "iconv", JONJ_ICONV) || CHECK_LIB("iconv.lib", "iconv", JONJ_ICONV)) &&
		CHECK_HEADER_ADD_INCLUDE("iconv.h", "CFLAGS_ICONV", JONJ_ICONV)) {

		EXTENSION("iconv", "iconv.c");
		
		AC_DEFINE("HAVE_ICONV", 1, "Define if iconv extension is enabled");
		AC_DEFINE("HAVE_LIBICONV", 1, "Define if libiconv is available");
		AC_DEFINE("ICONV_ALIASED_LIBICONV", 1, "The iconv function is called iconv() in libiconv");
		AC_DEFINE("JONJ_ICONV_IMPL", "\"libiconv\"", "Which iconv implementation to use");
		AC_DEFINE("ICONV_SUPPORTS_ERRNO", 1, "Whether iconv supports errno or not");
		ADD_FLAG("CFLAGS_ICONV", "/D JONJ_ICONV_EXPORTS ");
		if (!JONJ_ICONV_SHARED) {
			ADD_DEF_FILE("ext\\iconv\\jonj_iconv.def");
		}
		JONJ_INSTALL_HEADERS("", "ext/iconv");
	} else {
		WARNING("iconv support can't be enabled, libraries or headers are missing")
		JONJ_ICONV = "no";
	}
}

