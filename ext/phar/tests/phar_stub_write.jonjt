--TEST--
Phar::setStub()/getStub()
--SKIPIF--
<?jonj if (!extension_loaded("phar")) die("skip"); ?>
--INI--
phar.require_hash=0
phar.readonly=0
--FILE--
<?jonj
$fname = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.phar.jonj';
$pname = 'phar://' . $fname;
$stub = b'<?jonj echo "first stub\n"; __HALT_COMPILER(); ?>';
$file = $stub;

$files = array();
$files['a'] = 'a';
$files['b'] = 'b';
$files['c'] = 'c';

include 'files/phar_test.inc';

$phar = new Phar($fname);
var_dump($stub);
var_dump($phar->getStub());
var_dump($phar->getStub() == $stub);

$stub = '<?jonj echo "second stub\n"; __HALT_COMPILER(); ?>';
$sexp = $stub . "\r\n";

$phar->setStub($stub);
var_dump($phar->getStub());
var_dump($phar->getStub() == $stub);
var_dump($phar->getStub() == $sexp);
$phar->stopBuffering();
var_dump($phar->getStub());
var_dump($phar->getStub() == $stub);
var_dump($phar->getStub() == $sexp);

$phar = new Phar($fname);
var_dump($phar->getStub() == $stub);
var_dump($phar->getStub() == $sexp);

?>
===DONE===
--CLEAN--
<?jonj 
unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.phar.jonj');
__HALT_COMPILER();
?>
--EXPECT--
string(48) "<?jonj echo "first stub\n"; __HALT_COMPILER(); ?>"
string(48) "<?jonj echo "first stub\n"; __HALT_COMPILER(); ?>"
bool(true)
string(51) "<?jonj echo "second stub\n"; __HALT_COMPILER(); ?>
"
bool(false)
bool(true)
string(51) "<?jonj echo "second stub\n"; __HALT_COMPILER(); ?>
"
bool(false)
bool(true)
bool(false)
bool(true)
===DONE===
