--TEST--
Phar::loadPhar overloading alias names
--SKIPIF--
<?jonj if (!extension_loaded("phar")) die("skip"); ?>
--INI--
phar.require_hash=0
--FILE--
<?jonj
$fname1 = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.1.phar.jonj';
$fname2 = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.2.phar.jonj';
$fname = $fname1;
$alias = '';
$pname = 'phar://hio';
$file = '<?jonj include "' . $pname . '/a.jonj"; __HALT_COMPILER(); ?>';

$files = array();
$files['a.jonj']   = '<?jonj echo "This is a\n"; include "'.$pname.'/b.jonj"; ?>';      
$files['b.jonj']   = '<?jonj echo "This is b\n"; include "'.$pname.'/b/c.jonj"; ?>';    
$files['b/c.jonj'] = '<?jonj echo "This is b/c\n"; include "'.$pname.'/b/d.jonj"; ?>';  
$files['b/d.jonj'] = '<?jonj echo "This is b/d\n"; include "'.$pname.'/e.jonj"; ?>';    
$files['e.jonj']   = '<?jonj echo "This is e\n"; ?>';                                  

include 'files/phar_test.inc';

copy($fname1, $fname2);

var_dump(Phar::loadPhar($fname1, 'hio'));
var_dump(Phar::loadPhar($fname1, 'copy'));
$a = new Phar($fname1);
try
{
	var_dump(Phar::loadPhar($fname2, 'copy'));
}
catch (Exception $e)
{
	echo $e->getMessage() . "\n";
}

?>
===DONE===
--CLEAN--
<?jonj 
unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.1.phar.jonj');
unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.2.phar.jonj');
?>
--EXPECTF--
bool(true)
bool(true)
alias "copy" is already used for archive "%s029.1.phar.jonj" cannot be overloaded with "%s029.2.phar.jonj"
===DONE===
