--TEST--
Phar::setStub() (zip-based)
--SKIPIF--
<?jonj if (!extension_loaded("phar")) die("skip"); ?>
--INI--
phar.require_hash=0
phar.readonly=0
--FILE--
<?jonj
$fname2 = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.2.phar.zip.jonj';
$fname = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.phar.zip.jonj';
$pname = 'phar://' . $fname;
$pname2 = 'phar://' . $fname2;

$p = new Phar($pname2);
$p->setStub('<?jonj echo "first stub\n"; __HALT_COMPILER(); ?>');
$p['a'] = 'a';
$p['b'] = 'b';
$p['c'] = 'c';
copy($fname2, $fname);

$phar = new Phar($fname);
echo $phar->getStub();

$file = b'<?jonj echo "second stub\n"; __HALT_COMPILER(); ?>';

//// 2
$phar->setStub($file);
echo $phar->getStub();

$fname3 = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.phartmp.jonj';
$file = b'<?jonj echo "third stub\n"; __HALT_COMPILER(); ?>';
$fp = fopen($fname3, 'wb');
fwrite($fp, $file);
fclose($fp);
$fp = fopen($fname3, 'rb');

//// 3
$phar->setStub($fp);
fclose($fp);

echo $phar->getStub();

$fp = fopen($fname3, 'ab');
fwrite($fp, b'booya');
fclose($fp);
echo file_get_contents($fname3) . "\n";

$fp = fopen($fname3, 'rb');

//// 4
$phar->setStub($fp, strlen($file));
fclose($fp);
echo $phar->getStub();

$phar['testing'] = 'hi';

echo $phar->getStub();
?>
===DONE===
--CLEAN--
<?jonj 
unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.phar.zip.jonj');
unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.2.phar.zip.jonj');
unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.phartmp.jonj');
__HALT_COMPILER();
?>
--EXPECT--
<?jonj echo "first stub\n"; __HALT_COMPILER(); ?>
<?jonj echo "second stub\n"; __HALT_COMPILER(); ?>
<?jonj echo "third stub\n"; __HALT_COMPILER(); ?>
<?jonj echo "third stub\n"; __HALT_COMPILER(); ?>booya
<?jonj echo "third stub\n"; __HALT_COMPILER(); ?>
<?jonj echo "third stub\n"; __HALT_COMPILER(); ?>
===DONE===
