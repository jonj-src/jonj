--TEST--
Phar: fopen a .phar for writing (existing file) zip-based
--SKIPIF--
<?jonj if (!extension_loaded("phar")) die("skip"); ?>
--INI--
phar.readonly=0
phar.require_hash=0
--FILE--
<?jonj

$fname = dirname(__FILE__) . '/' . basename(__FILE__, '.jonj') . '.phar.zip';
$alias = 'phar://' . $fname;

$phar = new Phar($fname);
$phar->setStub('<?jonj __HALT_COMPILER(); ?>');

$files = array();

$files['a.jonj'] = '<?jonj echo "This is a\n"; ?>';
$files['b.jonj'] = '<?jonj echo "This is b\n"; ?>';
$files['b/c.jonj'] = '<?jonj echo "This is b/c\n"; ?>';

foreach ($files as $n => $file) {
	$phar[$n] = $file;
}
$phar->stopBuffering();

$fp = fopen($alias . '/b/c.jonj', 'wb');
fwrite($fp, b'extra');
fclose($fp);
include $alias . '/b/c.jonj';
?>

===DONE===
--CLEAN--
<?jonj unlink(dirname(__FILE__) . '/' . basename(__FILE__, '.clean.jonj') . '.phar.zip'); ?>
--EXPECT--
extra
===DONE===
